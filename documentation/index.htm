<!DOCTYPE html>
<head>
<style>
*
{
  font-family: 'Arial';
  padding: 3px 20px;
}
table td
{
  padding: 3px 20px;
}
.property
{
  color: blue;
}
.private_property
{
  color: lightblue;
}

.method
{
  color: red;
}

.private_method
{
  color: pink;
}

.dependency
{
  color: green;
}

.component
{
  padding: 20 10 20 10;
  margin: 20 10 20 10;
  background-color: #dfdfdf;
}

.component h3
{
}
</style>
</head>
<body>
<h1>TOC</h1>
<ul>
  <li><a href="#quintessence/Krampus21/DialogBoxFactory.q.yml">quintessence/Krampus21/DialogBoxFactory.q.yml</a></li>
  <li><a href="#quintessence/Krampus21/DialogBoxRenderer.q.yml">quintessence/Krampus21/DialogBoxRenderer.q.yml</a></li>
  <li><a href="#quintessence/Krampus21/DialogBoxes/Base.q.yml">quintessence/Krampus21/DialogBoxes/Base.q.yml</a></li>
  <li><a href="#quintessence/Krampus21/DialogFactory.q.yml">quintessence/Krampus21/DialogFactory.q.yml</a></li>
  <li><a href="#quintessence/Krampus21/ProgramRunner.q.yml">quintessence/Krampus21/ProgramRunner.q.yml</a></li>
  <li><a href="#quintessence/Krampus21/ScreenManager.q.yml">quintessence/Krampus21/ScreenManager.q.yml</a></li>
  <li><a href="#quintessence/Krampus21/ScriptLoader.q.yml">quintessence/Krampus21/ScriptLoader.q.yml</a></li>
  <li><a href="#quintessence/Krampus21/UserEventEmitter.q.yml">quintessence/Krampus21/UserEventEmitter.q.yml</a></li>
</ul>
<h1>Components</h1>
<ul>
  <div class="component">
    <h3 id="quintessence/Krampus21/DialogBoxFactory.q.yml">quintessence/Krampus21/DialogBoxFactory.q.yml</h3>
     <table>
    </table>
     <table>
<tr>
  <td class="method">create_basic_dialog_box_for_testing()</td>
</tr>
<tr>
  <td class="method">create_basic_dialog_box(1)</td>
</tr>
    </table>
     <table>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;std::vector&lt;std::string&gt;&quot;, &quot;headers&quot;=&gt;[&quot;vector&quot;, &quot;string&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;Krampus21::DialogBoxes::Base*&quot;, &quot;headers&quot;=&gt;[&quot;Krampus21/DialogBoxes/Base.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;Krampus21::DialogBoxes::Basic&quot;, &quot;headers&quot;=&gt;[&quot;Krampus21/DialogBoxes/Basic.hpp&quot;]}</td>
</tr>
    </table>
  </div>
</ul>
<ul>
  <div class="component">
    <h3 id="quintessence/Krampus21/DialogBoxRenderer.q.yml">quintessence/Krampus21/DialogBoxRenderer.q.yml</h3>
     <table>
<tr>
  <td class="property">font_bin</td>
  <td class="property">AllegroFlare::FontBin*</td>
</tr>
<tr>
  <td class="property">dialog_box</td>
  <td class="property">Krampus21::DialogBoxes::Base*</td>
</tr>
<tr>
  <td class="property">dialog_box_num_revealed_characters</td>
  <td class="property">int</td>
</tr>
<tr>
  <td class="property">place</td>
  <td class="property">allegro_flare::placement2d</td>
</tr>
    </table>
     <table>
<tr>
  <td class="method">render()</td>
</tr>
<tr>
  <td class="method">draw_special_state_empty_text()</td>
</tr>
<tr>
  <td class="method">draw_action_text(1)</td>
</tr>
<tr>
  <td class="method">draw_styled_revealed_text()</td>
</tr>
<tr>
  <td class="method">get_dialog_box_text()</td>
</tr>
<tr>
  <td class="method">concat_text(2)</td>
</tr>
<tr>
  <td class="private_method">obtain_dialog_font()</td>
</tr>
    </table>
     <table>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;ALLEGRO_FONT*&quot;, &quot;headers&quot;=&gt;[&quot;allegro5/allegro.h&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;al_is_system_installed&quot;, &quot;headers&quot;=&gt;[&quot;allegro5/allegro.h&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;al_get_current_display&quot;, &quot;headers&quot;=&gt;[&quot;allegro5/allegro.h&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;al_color_html&quot;, &quot;headers&quot;=&gt;[&quot;allegro5/allegro_color.h&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;al_is_primitives_addon_initialized&quot;, &quot;headers&quot;=&gt;[&quot;allegro5/allegro_primitives.h&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;al_draw_filled_rounded_rectangle&quot;, &quot;headers&quot;=&gt;[&quot;allegro5/allegro_primitives.h&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;Blast::StringJoiner&quot;, &quot;headers&quot;=&gt;[&quot;Blast/StringJoiner.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::FontBin*&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/FontBin.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;Krampus21::DialogBoxes::Base*&quot;, &quot;headers&quot;=&gt;[&quot;Krampus21/DialogBoxes/Base.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;allegro_flare::placement2d&quot;, &quot;headers&quot;=&gt;[&quot;allegro_flare/placement2d.h&quot;]}</td>
</tr>
    </table>
  </div>
</ul>
<ul>
  <div class="component">
    <h3 id="quintessence/Krampus21/DialogBoxes/Base.q.yml">quintessence/Krampus21/DialogBoxes/Base.q.yml</h3>
     <table>
<tr>
  <td class="property">type</td>
  <td class="property">std::string</td>
</tr>
<tr>
  <td class="property">pages</td>
  <td class="property">std::vector&lt;std::string&gt;</td>
</tr>
<tr>
  <td class="property">current_page_num</td>
  <td class="property">int</td>
</tr>
<tr>
  <td class="property">finished</td>
  <td class="property">bool</td>
</tr>
    </table>
     <table>
<tr>
  <td class="method">set_pages(1)</td>
</tr>
<tr>
  <td class="method">reset()</td>
</tr>
<tr>
  <td class="method">get_current_page_text()</td>
</tr>
<tr>
  <td class="method">next_page()</td>
</tr>
<tr>
  <td class="method">num_pages()</td>
</tr>
<tr>
  <td class="method">has_no_pages()</td>
</tr>
<tr>
  <td class="method">at_last_page()</td>
</tr>
<tr>
  <td class="private_method">current_page_is_valid()</td>
</tr>
<tr>
  <td class="method">is_type(1)</td>
</tr>
    </table>
     <table>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;Krampus21::DialogBoxes::Base&quot;, &quot;headers&quot;=&gt;[&quot;Krampus21/DialogBoxes/Base.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;std::vector&lt;std::vector&lt;std::string&gt;&gt;&quot;, &quot;headers&quot;=&gt;[&quot;vector&quot;, &quot;string&quot;]}</td>
</tr>
    </table>
  </div>
</ul>
<ul>
  <div class="component">
    <h3 id="quintessence/Krampus21/DialogFactory.q.yml">quintessence/Krampus21/DialogFactory.q.yml</h3>
     <table>
    </table>
     <table>
<tr>
  <td class="method">build_basic_test_dialog()</td>
</tr>
<tr>
  <td class="method">create_basic_test_dialog()</td>
</tr>
<tr>
  <td class="method">build_basic_dialog(1)</td>
</tr>
<tr>
  <td class="method">create_basic_dialog(1)</td>
</tr>
<tr>
  <td class="method">build_basic_dialog_from_file(1)</td>
</tr>
    </table>
     <table>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;Krampus21::DialogBoxes::Basic*&quot;, &quot;headers&quot;=&gt;[&quot;Krampus21/DialogBoxes/Basic.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;Krampus21::DialogBoxes::Basic&quot;, &quot;headers&quot;=&gt;[&quot;Krampus21/DialogBoxes/Basic.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;Blast::FileExistenceChecker&quot;, &quot;headers&quot;=&gt;[&quot;Blast/FileExistenceChecker.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::php::file_get_contents_split&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/UsefulPHP.hpp&quot;]}</td>
</tr>
    </table>
  </div>
</ul>
<ul>
  <div class="component">
    <h3 id="quintessence/Krampus21/ProgramRunner.q.yml">quintessence/Krampus21/ProgramRunner.q.yml</h3>
     <table>
    </table>
     <table>
<tr>
  <td class="method">run()</td>
</tr>
    </table>
     <table>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Display&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Display.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Screens&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Screens.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Framework&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Framework.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;std::map&lt;std::string, AllegroFlare::AudioRepositoryElement&gt;&quot;, &quot;headers&quot;=&gt;[&quot;map&quot;, &quot;string&quot;, &quot;AllegroFlare/AudioRepositoryElement.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;Krampus21::ScreenManager&quot;, &quot;headers&quot;=&gt;[&quot;Krampus21/ScreenManager.hpp&quot;]}</td>
</tr>
    </table>
  </div>
</ul>
<ul>
  <div class="component">
    <h3 id="quintessence/Krampus21/ScreenManager.q.yml">quintessence/Krampus21/ScreenManager.q.yml</h3>
     <table>
<tr>
  <td class="property">framework</td>
  <td class="property">AllegroFlare::Framework*</td>
</tr>
<tr>
  <td class="property">screens</td>
  <td class="property">AllegroFlare::Screens*</td>
</tr>
<tr>
  <td class="private_property">sound_effect_elements</td>
  <td class="private_property">std::map&lt;std::string, AllegroFlare::AudioRepositoryElement&gt;</td>
</tr>
<tr>
  <td class="private_property">music_track_elements</td>
  <td class="private_property">std::map&lt;std::string, AllegroFlare::AudioRepositoryElement&gt;</td>
</tr>
<tr>
  <td class="property">dialog_filename</td>
  <td class="property">std::string</td>
</tr>
<tr>
  <td class="property">user_event_emitter_souce</td>
  <td class="property">ALLEGRO_EVENT_SOURCE</td>
</tr>
<tr>
  <td class="property">user_event_emitter</td>
  <td class="property">Krampus21::UserEventEmitter</td>
</tr>
<tr>
  <td class="property">audio_controller</td>
  <td class="property">AllegroFlare::AudioController</td>
</tr>
<tr>
  <td class="property">dialogs</td>
  <td class="property">std::vector&lt;Krampus21::DialogBoxes::Base*&gt;</td>
</tr>
<tr>
  <td class="property">current_dialog</td>
  <td class="property">Krampus21::DialogBoxes::Base*</td>
</tr>
<tr>
  <td class="property">dialog_num_revealed_characters</td>
  <td class="property">int</td>
</tr>
<tr>
  <td class="property">initialized</td>
  <td class="property">bool</td>
</tr>
    </table>
     <table>
<tr>
  <td class="method">initialize()</td>
</tr>
<tr>
  <td class="method">start_game()</td>
</tr>
<tr>
  <td class="method">clear_all_dialogs()</td>
</tr>
<tr>
  <td class="method">shutdown_game()</td>
</tr>
<tr>
  <td class="method">advance_dialog()</td>
</tr>
<tr>
  <td class="method">update_dialog_playing()</td>
</tr>
<tr>
  <td class="method">dialog_is_finished()</td>
</tr>
<tr>
  <td class="method">primary_timer_func()</td>
</tr>
<tr>
  <td class="method">play_music_track(1)</td>
</tr>
<tr>
  <td class="method">key_down_func(1)</td>
</tr>
<tr>
  <td class="method">joy_button_down_func(1)</td>
</tr>
<tr>
  <td class="method">user_event_func(1)</td>
</tr>
<tr>
  <td class="method">obtain_font_bin()</td>
</tr>
    </table>
     <table>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;ALLEGRO_EVENT*&quot;, &quot;headers&quot;=&gt;[&quot;allegro5/allegro.h&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;ALLEGRO_EVENT_SOURCE&quot;, &quot;headers&quot;=&gt;[&quot;allegro5/allegro.h&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Screen&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Screen.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Screens*&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Screens.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Framework*&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Framework.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::FontBin*&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/FontBin.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Display&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Display.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::AudioController&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/AudioController.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;Krampus21::Screens::Base*&quot;, &quot;headers&quot;=&gt;[&quot;Krampus21/Screens/Base.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;Krampus21::UserEventEmitter&quot;, &quot;headers&quot;=&gt;[&quot;Krampus21/UserEventEmitter.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;std::map&lt;std::string, AllegroFlare::AudioRepositoryElement&gt;&quot;, &quot;headers&quot;=&gt;[&quot;map&quot;, &quot;string&quot;, &quot;AllegroFlare/AudioRepositoryElement.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;Krampus21::DialogBoxes::Basic&quot;, &quot;headers&quot;=&gt;[&quot;Krampus21/DialogBoxes/Basic.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;Krampus21::DialogBoxRenderer&quot;, &quot;headers&quot;=&gt;[&quot;Krampus21/DialogBoxRenderer.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;Krampus21::DialogFactory&quot;, &quot;headers&quot;=&gt;[&quot;Krampus21/DialogFactory.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;std::vector&lt;Krampus21::DialogBoxes::Base*&gt;&quot;, &quot;headers&quot;=&gt;[&quot;vector&quot;, &quot;Krampus21/DialogBoxes/Base.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;Krampus21::DialogBoxes::Base*&quot;, &quot;headers&quot;=&gt;[&quot;Krampus21/DialogBoxes/Base.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;Krampus21::ScriptLoader&quot;, &quot;headers&quot;=&gt;[&quot;Krampus21/ScriptLoader.hpp&quot;]}</td>
</tr>
    </table>
  </div>
</ul>
<ul>
  <div class="component">
    <h3 id="quintessence/Krampus21/ScriptLoader.q.yml">quintessence/Krampus21/ScriptLoader.q.yml</h3>
     <table>
<tr>
  <td class="property">script_lines</td>
  <td class="property">std::vector&lt;std::string&gt;</td>
</tr>
<tr>
  <td class="property">dialog_factory</td>
  <td class="property">Krampus21::DialogFactory</td>
</tr>
    </table>
     <table>
<tr>
  <td class="method">parse()</td>
</tr>
<tr>
  <td class="method">parse_line_and_build_dialog(1)</td>
</tr>
<tr>
  <td class="private_method">parse_command_and_argument(1)</td>
</tr>
    </table>
     <table>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;std::vector&lt;Krampus21::DialogBoxes::Base*&gt;&quot;, &quot;headers&quot;=&gt;[&quot;vector&quot;, &quot;Krampus21/DialogBoxes/Base.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;Krampus21::DialogBoxes::Base*&quot;, &quot;headers&quot;=&gt;[&quot;Krampus21/DialogBoxes/Base.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;Krampus21::DialogFactory&quot;, &quot;headers&quot;=&gt;[&quot;Krampus21/DialogFactory.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;Krampus21::DialogBoxes::Basic*&quot;, &quot;headers&quot;=&gt;[&quot;Krampus21/DialogBoxes/Basic.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;std::pair&lt;std::string, std::string&gt;&quot;, &quot;headers&quot;=&gt;[&quot;utility&quot;, &quot;string&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;Blast::String::Trimmer&quot;, &quot;headers&quot;=&gt;[&quot;Blast/String/Trimmer.hpp&quot;]}</td>
</tr>
    </table>
  </div>
</ul>
<ul>
  <div class="component">
    <h3 id="quintessence/Krampus21/UserEventEmitter.q.yml">quintessence/Krampus21/UserEventEmitter.q.yml</h3>
     <table>
    </table>
     <table>
<tr>
  <td class="method">run()</td>
</tr>
    </table>
     <table>
    </table>
  </div>
</ul>
<h1>Dependents</h1>
<pre>
{
  "std/vector<std/string>": [
    "Krampus21/DialogBoxFactory"
  ],
  "Krampus21/DialogBoxes/Base": [
    "Krampus21/DialogBoxFactory",
    "Krampus21/DialogBoxRenderer",
    "Krampus21/DialogBoxes/Base",
    "Krampus21/ScreenManager",
    "Krampus21/ScriptLoader"
  ],
  "Krampus21/DialogBoxes/Basic": [
    "Krampus21/DialogBoxFactory",
    "Krampus21/DialogFactory",
    "Krampus21/DialogFactory",
    "Krampus21/ScreenManager",
    "Krampus21/ScriptLoader"
  ],
  "ALLEGRO_FONT": [
    "Krampus21/DialogBoxRenderer"
  ],
  "al_is_system_installed": [
    "Krampus21/DialogBoxRenderer"
  ],
  "al_get_current_display": [
    "Krampus21/DialogBoxRenderer"
  ],
  "al_color_html": [
    "Krampus21/DialogBoxRenderer"
  ],
  "al_is_primitives_addon_initialized": [
    "Krampus21/DialogBoxRenderer"
  ],
  "al_draw_filled_rounded_rectangle": [
    "Krampus21/DialogBoxRenderer"
  ],
  "Blast/StringJoiner": [
    "Krampus21/DialogBoxRenderer"
  ],
  "AllegroFlare/FontBin": [
    "Krampus21/DialogBoxRenderer",
    "Krampus21/ScreenManager"
  ],
  "allegro_flare/placement2d": [
    "Krampus21/DialogBoxRenderer"
  ],
  "std/vector<std/vector<std/string>>": [
    "Krampus21/DialogBoxes/Base"
  ],
  "Blast/FileExistenceChecker": [
    "Krampus21/DialogFactory"
  ],
  "AllegroFlare/php/file_get_contents_split": [
    "Krampus21/DialogFactory"
  ],
  "AllegroFlare/Display": [
    "Krampus21/ProgramRunner",
    "Krampus21/ScreenManager"
  ],
  "AllegroFlare/Screens": [
    "Krampus21/ProgramRunner",
    "Krampus21/ScreenManager"
  ],
  "AllegroFlare/Framework": [
    "Krampus21/ProgramRunner",
    "Krampus21/ScreenManager"
  ],
  "std/map<std/string, AllegroFlare/AudioRepositoryElement>": [
    "Krampus21/ProgramRunner",
    "Krampus21/ScreenManager"
  ],
  "Krampus21/ScreenManager": [
    "Krampus21/ProgramRunner"
  ],
  "ALLEGRO_EVENT": [
    "Krampus21/ScreenManager"
  ],
  "ALLEGRO_EVENT_SOURCE": [
    "Krampus21/ScreenManager"
  ],
  "AllegroFlare/Screen": [
    "Krampus21/ScreenManager"
  ],
  "AllegroFlare/AudioController": [
    "Krampus21/ScreenManager"
  ],
  "Krampus21/Screens/Base": [
    "Krampus21/ScreenManager"
  ],
  "Krampus21/UserEventEmitter": [
    "Krampus21/ScreenManager"
  ],
  "Krampus21/DialogBoxRenderer": [
    "Krampus21/ScreenManager"
  ],
  "Krampus21/DialogFactory": [
    "Krampus21/ScreenManager",
    "Krampus21/ScriptLoader"
  ],
  "std/vector<Krampus21/DialogBoxes/Base>": [
    "Krampus21/ScreenManager",
    "Krampus21/ScriptLoader"
  ],
  "Krampus21/ScriptLoader": [
    "Krampus21/ScreenManager"
  ],
  "std/pair<std/string, std/string>": [
    "Krampus21/ScriptLoader"
  ],
  "Blast/String/Trimmer": [
    "Krampus21/ScriptLoader"
  ]
}
</pre>
</body>