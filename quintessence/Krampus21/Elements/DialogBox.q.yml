properties:


  - name: font_bin
    type: AllegroFlare::FontBin*
    init_with: nullptr
    constructor_arg: true

  - name: dialog_box
    type: Krampus21::DialogBoxes::Base*
    init_with: nullptr
    constructor_arg: true

  - name: width
    type: float
    init_with: '1920/5*3'
    getter: true

  - name: height
    type: float
    init_with: '1080/4'
    getter: true


functions:


  - name: render
    guards:
      - al_is_system_installed()
      - al_is_primitives_addon_initialized()
      - al_get_current_display()
      - al_is_font_addon_initialized()
      - al_is_ttf_addon_initialized()
      - font_bin
      - dialog_box
    body: |
      float roundness = 18.0f;
      float border_thickness = 5.0f;
      float border_inner_padding = border_thickness * 3;
      //ALLEGRO_COLOR fill_color = al_color_html("162428");
      float opacity = 0.7;
      ALLEGRO_COLOR fill_color = ALLEGRO_COLOR{0.02f*opacity, 0.0f*opacity, 0.1f*opacity, opacity};
      ALLEGRO_COLOR border_color = al_color_html("244751");

      // draw backfill
      al_draw_filled_rounded_rectangle(
         0 + border_inner_padding,
         0 + border_inner_padding,
         width - border_inner_padding,
         height - border_inner_padding,
         roundness * 0.5,
         roundness * 0.5,
         fill_color
      );
      // draw border
      al_draw_rounded_rectangle(
         0,
         0,
         width,
         height,
         roundness,
         roundness,
         border_color,
         border_thickness
      );

      if (dialog_box->get_finished())
      {
         draw_special_state_empty_text();
      }
      else
      {
         // draw the player's action cursor thing at the bottom
         int current_dialog_box_page_character_count = dialog_box->get_current_page_text().length();
         int num_revealed_characters = obtain_dialog_box_num_revealed_characters();
         if (num_revealed_characters >= current_dialog_box_page_character_count)
         {
            //if (dialog_box->at_last_page()) draw_action_text("[close]");
            draw_action_text(">>");
         }
      }

      return;
    body_dependency_symbols:
      - al_is_system_installed
      - al_is_primitives_addon_initialized
      - al_draw_filled_rounded_rectangle
      - al_color_html


  - name: draw_special_state_empty_text
    body: |
      ALLEGRO_FONT* text_font = obtain_dialog_font();
      ALLEGRO_COLOR text_color = al_color_name("darkslategray");
      float line_height = al_get_font_line_height(text_font);
      std::string text = "[dialog finished]";
      al_draw_text(
         text_font,
         text_color,
         width * 0.5,
         height * 0.5 - line_height * 0.5,
         ALLEGRO_ALIGN_CENTER,
         text.c_str()
      );
      return;


  - name: draw_action_text
    parameters:
      - name: text
        type: std::string
        default_argument: '"[unset-action-text]"'
    body: |
      ALLEGRO_FONT* text_font = obtain_dialog_font();
      ALLEGRO_COLOR text_color = al_color_html("66a9bc");
      float line_height = al_get_font_line_height(text_font);
      al_draw_text(
         text_font,
         text_color,
         width-20,
         height-line_height-10,
         ALLEGRO_ALIGN_RIGHT,
         text.c_str()
      );
      return;


  - name: obtain_dialog_box_text
    type: std::string
    guards: [ dialog_box ]
    body: |
      return dialog_box->get_current_page_text();


  - name: obtain_dialog_box_num_revealed_characters
    type: int
    guards: [ dialog_box ]
    body: |
      return dialog_box->get_num_revealed_characters();


  - name: concat_text
    type: std::string
    guards: [ dialog_box ]
    parameters:
      - name: source_text
        type: std::string
        default_argument: '""'
      - name: length
        type: int
        default_argument: 0
    body: |
      return source_text.substr(0, length);


  - name: obtain_dialog_font
    guards: [ al_is_font_addon_initialized(), al_is_ttf_addon_initialized(), font_bin ]
    private: true
    type: ALLEGRO_FONT*
    body: |
      static const std::string FONT_IDENTIFIER = "Purista Medium.ttf -50";
      ALLEGRO_FONT* result_font = font_bin->operator[](FONT_IDENTIFIER);
      return result_font;


dependencies:


  - symbol: ALLEGRO_FONT*
    headers: [ allegro5/allegro.h ]
  - symbol: al_is_system_installed
    headers: [ allegro5/allegro.h ]
  - symbol: al_get_current_display
    headers: [ allegro5/allegro.h ]
  - symbol: al_color_html
    headers: [ allegro5/allegro_color.h ]
  - symbol: al_is_primitives_addon_initialized
    headers: [ allegro5/allegro_primitives.h ]
  - symbol: al_draw_filled_rounded_rectangle
    headers: [ allegro5/allegro_primitives.h ]
  - symbol: Blast::StringJoiner
    headers: [ Blast/StringJoiner.hpp ]
  - symbol: AllegroFlare::FontBin*
    headers: [ AllegroFlare/FontBin.hpp ]
  - symbol: Krampus21::DialogBoxes::Base*
    headers: [ Krampus21/DialogBoxes/Base.hpp ]
  - symbol: allegro_flare::placement2d
    headers: [ allegro_flare/placement2d.h ]


